//===----------------------------------------------------------------------===//
//
// Part of the Utopia EDA Project, under the Apache License v2.0
// SPDX-License-Identifier: Apache-2.0
// Copyright 2022 ISP RAS (http://www.ispras.ru)
//
//===----------------------------------------------------------------------===//

model M {
  nodetype IN () => (INT16<1.0> #0 x);
  nodetype W7 () => (INT16<1.0> value=565);
  nodetype W1_sub_W7 () => (INT16<1.0> value=2276);
  nodetype OUT (INT16<1.0> x) => ();
  nodetype ADD (INT16<1.0> x, INT16<1.0> y) => (INT16<1.0> #1 z); // z = x + y
  nodetype MUL (INT16<1.0> x, INT16<1.0> y) => (INT16<1.0> #3 z); // z = x * y
  nodetype dup_2 (INT16<1.0> x) => (INT16<1.0> y, INT16<1.0> z);

  graph main {
    chan INT16 x4_0;
    chan INT16 x4_0_0;
    chan INT16 x4_0_1;
    chan INT16 x5_0_0;
    chan INT16 w7;
    chan INT16 w1_sub_w7;
    chan INT16 t4_1;
    chan INT16 t8_1;
    chan INT16 x8_1;
    chan INT16 x8_1_0;
    chan INT16 x8_1_1;
    chan INT16 x4_1;
    chan INT16 x4_1_0;
    chan INT16 x4_1_1;

    node IN n_in_0 () => (x4_0);
    node IN n_in_7 () => (x5_0_0);
    node W7        n_w7        () => (w7);
    node W1_sub_W7 n_w1_sub_w7 () => (w1_sub_w7);
    node dup_2 d_x4_0 (x4_0)              => (x4_0_0, x4_0_1);
    node ADD   n_t8_1 (x4_0_0,    x5_0_0) => (t8_1);
    node MUL   n_x8_1 (w7,        t8_1)   => (x8_1);
    node MUL   n_t4_1 (w1_sub_w7, x4_0_1) => (t4_1);
    node dup_2 d_x8_1 (x8_1)              => (x8_1_0, x8_1_1);
    node ADD   n_x4_1 (x8_1_0,    t4_1)   => (x4_1);
    node dup_2 d_x4_1 (x4_1)              => (x4_1_0, x4_1_1);
    node OUT   o_x4_1_0 (x4_1_0)          => ();
    node OUT   o_x4_1_1 (x4_1_1)          => ();
    node OUT   o_x8_1_1 (x8_1_1)          => ();
  }
}
