{{#LICENSE}}
{{!===----------------------------------------------------------------------===}}
{{!                                                                            }}
{{! Part of the Utopia EDA Project, under the Apache License v2.0              }}
{{! SPDX-License-Identifier: Apache-2.0                                        }}
{{! Copyright 2021 ISP RAS (http://www.ispras.ru)                              }}
{{!                                                                            }}
{{!===----------------------------------------------------------------------===}}
{{/LICENSE}}/*
 * This Verilog testbench was automatically generated by Utopia EDA
 * Generation started: {{GEN_TIME}}
 *
 * Ivannikov Institute for System Programming
 * of the Russian Academy of Sciences (ISP RAS)
 * 25 Alexander Solzhenitsyn st., Moscow, 109004, Russia
 * http://forge.ispras.ru/projects/utopia
 */

`timescale 1ns/10ps

module {{MODULE_NAME}}_tb;
	// inputs
{{#INS}}	reg {{IN_TYPE}} {{IN_NAME}};
{{/INS}}
	// outputs
{{#OUTS}}	wire {{OUT_TYPE}} {{OUT_NAME}};
{{/OUTS}}
	localparam {{MODULE_NAME}}_latency = {{LATENCY}};

	{{MODULE_NAME}} DUT(
{{#BIND}}		.{{WNAME}}({{WNAME}}){{SEP}}{{/BIND}});

	initial clock = 0;
	always clock = #({{MODULE_NAME}}_latency) ~clock;

	initial begin
		$dumpvars(0, {{MODULE_NAME}}_tb);

		// reset the device
		@(posedge clock);
		reset = 1;
		#({{MODULE_NAME}}_latency);
		reset = 0;

		// apply sequence of random stimuli
		{{#TESTS}}
		@(posedge clock);
		{{#ST}}
		{{NAME}} = $urandom;{{/ST}}
		{{/TESTS}}

		//#dumpoff;
		$finish;
	end
endmodule
