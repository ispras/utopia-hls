/*
 * This Verilog testbench was automatically generated by Utopia EDA
 * Generation started: 7-2-2023 0:51:36
 *
 * Ivannikov Institute for System Programming
 * of the Russian Academy of Sciences (ISP RAS)
 * 25 Alexander Solzhenitsyn st., Moscow, 109004, Russia
 * http://forge.ispras.ru/projects/utopia
 */

`timescale 1ns/10ps

module VectorSum_tb;
	// inputs
	reg  clock;
	reg  reset;
	reg [15:0] source__dfc_wire_4825__dfc_wire_4825;
	reg [15:0] source__dfc_wire_4826__dfc_wire_4825;
	reg [15:0] source__dfc_wire_4830__dfc_wire_4825;
	reg [15:0] source__dfc_wire_4824__dfc_wire_4825;
	reg [15:0] source__dfc_wire_4827__dfc_wire_4825;
	reg [15:0] source__dfc_wire_4831__dfc_wire_4825;
	reg [15:0] source__dfc_wire_4828__dfc_wire_4825;
	reg [15:0] source__dfc_wire_4829__dfc_wire_4825;

	// outputs
	wire [15:0] sink__dfc_wire_4848__dfc_wire_4848;
	wire [15:0] sink__dfc_wire_4840__dfc_wire_4848;
	wire [15:0] sink__dfc_wire_4844__dfc_wire_4848;
	wire [15:0] sink__dfc_wire_4836__dfc_wire_4848;

	localparam VectorSum_latency = 187;

	VectorSum DUT(
		.clock(clock),
		.reset(reset),
		.source__dfc_wire_4825__dfc_wire_4825(source__dfc_wire_4825__dfc_wire_4825),
		.source__dfc_wire_4826__dfc_wire_4825(source__dfc_wire_4826__dfc_wire_4825),
		.source__dfc_wire_4830__dfc_wire_4825(source__dfc_wire_4830__dfc_wire_4825),
		.source__dfc_wire_4824__dfc_wire_4825(source__dfc_wire_4824__dfc_wire_4825),
		.source__dfc_wire_4827__dfc_wire_4825(source__dfc_wire_4827__dfc_wire_4825),
		.source__dfc_wire_4831__dfc_wire_4825(source__dfc_wire_4831__dfc_wire_4825),
		.source__dfc_wire_4828__dfc_wire_4825(source__dfc_wire_4828__dfc_wire_4825),
		.source__dfc_wire_4829__dfc_wire_4825(source__dfc_wire_4829__dfc_wire_4825),
		.sink__dfc_wire_4848__dfc_wire_4848(sink__dfc_wire_4848__dfc_wire_4848),
		.sink__dfc_wire_4840__dfc_wire_4848(sink__dfc_wire_4840__dfc_wire_4848),
		.sink__dfc_wire_4844__dfc_wire_4848(sink__dfc_wire_4844__dfc_wire_4848),
		.sink__dfc_wire_4836__dfc_wire_4848(sink__dfc_wire_4836__dfc_wire_4848));

	initial clock = 0;
	always clock = #(VectorSum_latency) ~clock;

	initial begin
		$dumpvars(0, VectorSum_tb);

		// reset the device
		@(posedge clock);
		
		reset = 0;
		#(VectorSum_latency * 6);
		reset = ~0;
		

		// apply sequence of random stimuli
		
		@(posedge clock);
		
		source__dfc_wire_4825__dfc_wire_4825 = 0;
		source__dfc_wire_4826__dfc_wire_4825 = 0;
		source__dfc_wire_4830__dfc_wire_4825 = 0;
		source__dfc_wire_4824__dfc_wire_4825 = 0;
		source__dfc_wire_4827__dfc_wire_4825 = 0;
		source__dfc_wire_4831__dfc_wire_4825 = 0;
		source__dfc_wire_4828__dfc_wire_4825 = 0;
		source__dfc_wire_4829__dfc_wire_4825 = 0;
		
		#(VectorSum_latency * 240);

		$finish;
	end
endmodule
