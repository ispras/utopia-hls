/*
 * This Verilog testbench was automatically generated by Utopia EDA
 * Generation started: 29-1-2023 8:52:56
 *
 * Ivannikov Institute for System Programming
 * of the Russian Academy of Sciences (ISP RAS)
 * 25 Alexander Solzhenitsyn st., Moscow, 109004, Russia
 * http://forge.ispras.ru/projects/utopia
 */

`timescale 1ns/10ps

module ScalarMul_tb;
	// inputs
	reg  clock;
	reg  reset;
	reg [15:0] source__dfc_wire_4853__dfc_wire_4853;
	reg [15:0] source__dfc_wire_4857__dfc_wire_4853;
	reg [15:0] source__dfc_wire_4854__dfc_wire_4853;
	reg [15:0] source__dfc_wire_4855__dfc_wire_4853;
	reg [15:0] source__dfc_wire_4856__dfc_wire_4853;
	reg [15:0] source__dfc_wire_4852__dfc_wire_4853;

	// outputs
	wire [15:0] sink__dfc_wire_4873__dfc_wire_4873;

	localparam ScalarMul_latency = 284;

	ScalarMul DUT(
		.clock(clock),
		.reset(reset),
		.source__dfc_wire_4853__dfc_wire_4853(source__dfc_wire_4853__dfc_wire_4853),
		.source__dfc_wire_4857__dfc_wire_4853(source__dfc_wire_4857__dfc_wire_4853),
		.source__dfc_wire_4854__dfc_wire_4853(source__dfc_wire_4854__dfc_wire_4853),
		.source__dfc_wire_4855__dfc_wire_4853(source__dfc_wire_4855__dfc_wire_4853),
		.source__dfc_wire_4856__dfc_wire_4853(source__dfc_wire_4856__dfc_wire_4853),
		.source__dfc_wire_4852__dfc_wire_4853(source__dfc_wire_4852__dfc_wire_4853),
		.sink__dfc_wire_4873__dfc_wire_4873(sink__dfc_wire_4873__dfc_wire_4873));

	initial clock = 0;
	always clock = #(ScalarMul_latency) ~clock;

	initial begin
		$dumpvars(0, ScalarMul_tb);

		// reset the device
		@(posedge clock);
		
		reset = 0;
		#(ScalarMul_latency * 6);
		reset = ~0;
		

		// apply sequence of random stimuli
		
		@(posedge clock);
		
		source__dfc_wire_4853__dfc_wire_4853 = 0;
		source__dfc_wire_4857__dfc_wire_4853 = 0;
		source__dfc_wire_4854__dfc_wire_4853 = 0;
		source__dfc_wire_4855__dfc_wire_4853 = 0;
		source__dfc_wire_4856__dfc_wire_4853 = 0;
		source__dfc_wire_4852__dfc_wire_4853 = 0;
		
		#(ScalarMul_latency * 240);

		$finish;
	end
endmodule
